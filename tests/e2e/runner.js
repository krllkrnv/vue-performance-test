import fs from 'fs-extra'
import puppeteer from 'puppeteer'
import { generateCharts } from './chartGenerator.js'
import { generateReport } from './reportGenerator.js'

// –°–æ–∑–¥–∞–µ–º –ø–∞–ø–∫—É –¥–ª—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
await fs.ensureDir('./results')

// –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∑–∞–ø—É—Å–∫–∞ —Ç–µ—Å—Ç–æ–≤
async function runTests() {
  console.log('üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ Vue.js')

  // –ó–∞–ø—É—Å–∫–∞–µ–º –±—Ä–∞—É–∑–µ—Ä —Å —É–≤–µ–ª–∏—á–µ–Ω–Ω—ã–º–∏ —Ç–∞–π–º–∞—É—Ç–∞–º–∏
  const browser = await puppeteer.launch({
    headless: 'new',
    args: [
      '--no-sandbox',
      '--disable-setuid-sandbox',
      '--disable-dev-shm-usage',
      '--js-flags="--max-old-space-size=4096"'
    ],
    protocolTimeout: 300000 // 5 –º–∏–Ω—É—Ç
  })

  const page = await browser.newPage()

  // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–∞–π–º–∞—É—Ç—ã –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
  await page.setDefaultNavigationTimeout(300000) // 5 –º–∏–Ω—É—Ç
  await page.setDefaultTimeout(300000) // 5 –º–∏–Ω—É—Ç

  // –í–∫–ª—é—á–∞–µ–º —Å–±–æ—Ä –º–µ—Ç—Ä–∏–∫ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
  await page.evaluateOnNewDocument(() => {
    window.performanceResults = {
      render: [],
      update: [],
      interaction: []
    }
    window.allTestsCompleted = false
    window.testStatus = {
      current: 'initializing',
      progress: 0,
      total: 0
    }
  })

  // –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—é
  console.log('üåê –ü–µ—Ä–µ—Ö–æ–¥ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É —Ç–µ—Å—Ç–æ–≤...')
  await page.goto('http://frontend:5173', {
    waitUntil: 'networkidle0',
    timeout: 300000 // 5 –º–∏–Ω—É—Ç
  })

  // –ñ–¥–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –≤—Å–µ—Ö —Ç–µ—Å—Ç–æ–≤
  console.log('‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —Ç–µ—Å—Ç–æ–≤...')

  try {
    // –û–∂–∏–¥–∞–µ–º —Ñ–ª–∞–≥ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —Å —É–≤–µ–ª–∏—á–µ–Ω–Ω—ã–º —Ç–∞–π–º–∞—É—Ç–æ–º
    await page.waitForFunction(() => window.allTestsCompleted, {
      timeout: 300000, // 5 –º–∏–Ω—É—Ç
      polling: 5000 // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–∂–¥—ã–µ 5 —Å–µ–∫—É–Ω–¥
    })

    console.log('‚úÖ –í—Å–µ —Ç–µ—Å—Ç—ã –∑–∞–≤–µ—Ä—à–µ–Ω—ã!')
  } catch (error) {
    console.error('‚ùå –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —Ç–µ—Å—Ç–æ–≤ –ø—Ä–µ—Ä–≤–∞–Ω–æ:', error)

    // –ü—ã—Ç–∞–µ–º—Å—è –ø–æ–ª—É—á–∏—Ç—å —Ç–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å
    const status = await page.evaluate(() => window.testStatus?.current || 'unknown')
    const progress = await page.evaluate(() => window.testStatus?.progress || 0)
    const total = await page.evaluate(() => window.testStatus?.total || 1)

    console.error(`–ü–æ—Å–ª–µ–¥–Ω–∏–π —Å—Ç–∞—Ç—É—Å —Ç–µ—Å—Ç–æ–≤: ${status}`)
    console.error(`–ü—Ä–æ–≥—Ä–µ—Å—Å –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è: ${progress}/${total} —Ç–µ—Å—Ç–æ–≤`)

    // –°–æ—Ö—Ä–∞–Ω—è–µ–º —á–∞—Å—Ç–∏—á–Ω—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã, –µ—Å–ª–∏ –µ—Å—Ç—å
    const partialResults = await page.evaluate(() => window.performanceResults)
    if (Object.keys(partialResults).length > 0) {
      await fs.writeJson('./results/partial-results.json', partialResults)
      console.log('üíæ –ß–∞—Å—Ç–∏—á–Ω—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ results/partial-results.json')
    }

    throw new Error(`–¢–µ—Å—Ç—ã –Ω–µ –∑–∞–≤–µ—Ä—à–∏–ª–∏—Å—å –≤ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã–π —Å—Ä–æ–∫. –ü–æ—Å–ª–µ–¥–Ω–∏–π —Å—Ç–∞—Ç—É—Å: ${status}`)
  }

  // –°–æ–±–∏—Ä–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
  const results = await page.evaluate(() => window.performanceResults)

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
  let hasResults = false
  if (results.render && results.render.length > 0) {
    console.log(`üìä –ü–æ–ª—É—á–µ–Ω–æ ${results.render.length} —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥–∞`)
    hasResults = true
  } else {
    console.warn('‚ö†Ô∏è –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç–µ—Å—Ç–æ–≤ —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥–∞ –Ω–µ –ø–æ–ª—É—á–µ–Ω—ã!')
  }

  if (results.update && results.update.length > 0) {
    console.log(`üìä –ü–æ–ª—É—á–µ–Ω–æ ${results.update.length} —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π`)
    hasResults = true
  } else {
    console.warn('‚ö†Ô∏è –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç–µ—Å—Ç–æ–≤ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π –Ω–µ –ø–æ–ª—É—á–µ–Ω—ã!')
  }

  // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å—ã—Ä—ã–µ –¥–∞–Ω–Ω—ã–µ
  if (hasResults) {
    await fs.writeJson('./results/test-results.json', results)
    console.log('üíæ –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ results/test-results.json')

    // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –≥—Ä–∞—Ñ–∏–∫–∏
    console.log('üìä –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –≥—Ä–∞—Ñ–∏–∫–æ–≤...')
    await generateCharts(results)

    // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –æ—Ç—á–µ—Ç
    console.log('üìù –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –æ—Ç—á–µ—Ç–∞...')
    const report = generateReport(results)
    await fs.writeFile('./results/report.md', report)

    console.log('üìÑ –û—Ç—á–µ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤ results/report.md')
  } else {
    console.error('‚ùå –ù–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è!')
  }

  console.log('‚ú® –í—Å–µ –∑–∞–¥–∞—á–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω—ã!')
  await browser.close()
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç—ã
runTests().catch(error => {
  console.error('‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞:', error.message)
  process.exit(1)
})
